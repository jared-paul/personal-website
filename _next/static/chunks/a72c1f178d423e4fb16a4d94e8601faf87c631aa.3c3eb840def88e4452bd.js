(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[4],{"/fqj":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return u})),n.d(t,"default",(function(){return h}));var a=n("rePB"),o=n("Ff2n"),r=(n("q1tI"),n("7ljp")),i=n("WNUu"),c=n("Ls/5"),s=n("JYIZ");function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var u={folder:"using_vscode_for_os161",title:"VSCode for OS161",description:"Description on how to use VSCode when debugging OS161",date:new Date("Jan 04, 2020"),readTime:2,tags:["vscode","debugging","os161","debug","gdb","gcc"]},p={meta:u},d=function(e){var t=e.children;return Object(r.b)(i.a,{meta:u,related:Object(r.b)(c.a,{post:Object(s.a)("condition_variables_in_os161")})},t)};function h(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(d,b(b(b({},p),n),{},{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Soon\u2122"))}h.isMDXComponent=!0},"3UD+":function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},"3Z9Z":function(e,t,n){"use strict";var a=n("wx14"),o=n("zLVn"),r=n("TSYQ"),i=n.n(r),c=n("q1tI"),s=n.n(c),l=n("vUet"),b=["xl","lg","md","sm","xs"],u=s.a.forwardRef((function(e,t){var n=e.bsPrefix,r=e.className,c=e.noGutters,u=e.as,p=void 0===u?"div":u,d=Object(o.a)(e,["bsPrefix","className","noGutters","as"]),h=Object(l.a)(n,"row"),m=h+"-cols",j=[];return b.forEach((function(e){var t,n=d[e];delete d[e];var a="xs"!==e?"-"+e:"";null!=(t=null!=n&&"object"===typeof n?n.cols:n)&&j.push(""+m+a+"-"+t)})),s.a.createElement(p,Object(a.a)({ref:t},d,{className:i.a.apply(void 0,[r,h,c&&"no-gutters"].concat(j))}))}));u.displayName="Row",u.defaultProps={noGutters:!1},t.a=u},"7vrA":function(e,t,n){"use strict";var a=n("wx14"),o=n("zLVn"),r=n("TSYQ"),i=n.n(r),c=n("q1tI"),s=n.n(c),l=n("vUet"),b=s.a.forwardRef((function(e,t){var n=e.bsPrefix,r=e.fluid,c=e.as,b=void 0===c?"div":c,u=e.className,p=Object(o.a)(e,["bsPrefix","fluid","as","className"]),d=Object(l.a)(n,"container"),h="string"===typeof r?"-"+r:"-fluid";return s.a.createElement(b,Object(a.a)({ref:t},p,{className:i()(u,r?""+d+h:d)}))}));b.displayName="Container",b.defaultProps={fluid:!1},t.a=b},CJad:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return u})),n.d(t,"default",(function(){return h}));var a=n("rePB"),o=n("Ff2n"),r=(n("q1tI"),n("7ljp")),i=n("WNUu"),c=n("Ls/5"),s=n("JYIZ");function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var u={folder:"locks_in_os161",title:"Locks in OS161",description:"Getting started and implementing locks in OS161",date:new Date("Jan 04, 2020"),readTime:2,tags:["lock","locks","os161","synchronization","synchronize","synchronous","semaphores","semaphore","binary semaphore"]},p={meta:u},d=function(e){var t=e.children;return Object(r.b)(i.a,{meta:u,related:Object(r.b)(c.a,{post:Object(s.a)("condition_variables_in_os161")})},t)};function h(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(d,b(b(b({},p),n),{},{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",null,"What are locks?"),Object(r.b)("p",null,"Locks are:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"a synchronization mechanism for enforcing limits on access to a resource in an environment where there are many threads of execution. A lock is designed to enforce a mutual exclusion concurrency control policy."),Object(r.b)("p",{parentName:"blockquote"},"\u2014 ",Object(r.b)("cite",null,Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Lock_(computer_science)",target:"_blank"},"Wikipedia")))),Object(r.b)("h3",null,"How do we implement them in OS161?"),Object(r.b)("p",null,"We will be implementing the simplest type of lock: a binary semaphore. This binary semaphore will guard the access\nof resources by sleeping the execution of threads that request the lock until they are allowed to access it."),Object(r.b)("h4",null,"Semaphores in OS161"),Object(r.b)("p",null,"OS161 already gives us an implementation of a counting semaphore using wait channels (wchan) through the\n",Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"P")))," and ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"V"))),' functions.\nI like to call them "wait" and "signal"; it makes more intuitive sense to me.'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"P"))," :")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Acquire the spinlock of the semaphore since the semaphore is a shared resource "),Object(r.b)("li",{parentName:"ol"},"Check if there are resources available (",Object(r.b)("inlineCode",{parentName:"li"},"sem_count > 0"),")"),Object(r.b)("li",{parentName:"ol"},"If resources are available goto "),Object(r.b)("li",{parentName:"ol"},"Otherwise, we sleep the thread that wants to acquire the spinlock to avoid busy waiting"),Object(r.b)("li",{parentName:"ol"},"Sleeping..."),Object(r.b)("li",{parentName:"ol"},"When woken-up goto step 1."),Object(r.b)("li",{parentName:"ol"},"There are now resources available, decrement ",Object(r.b)("inlineCode",{parentName:"li"},"sem_count")),Object(r.b)("li",{parentName:"ol"},"Release the spinlock")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"V"))," :")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Acquire the spinlock of the semaphore"),Object(r.b)("li",{parentName:"ol"},"Increment ",Object(r.b)("inlineCode",{parentName:"li"},"sem_count")," to indicate resources are now available"),Object(r.b)("li",{parentName:"ol"},'Wake a thread on the wait channel to indicate "Hey, resources are available! You can continue execution"'),Object(r.b)("li",{parentName:"ol"},"Release the spinlock")),Object(r.b)("p",null,"Note: the wait channel (wchan) is a shared resource, so in step 4 (",Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"P"))),")\nand step 3 (",Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"V"))),") we acquire and release the\nwchan lock."),Object(r.b)("h4",null,"Binary Semaphores"),Object(r.b)("p",null,"A binary semaphore is just a counting semaphore with values 0 or 1. This represents how there is only one resource\navailable at a time. In otherwords, only one thread can acquire the resource at a time.  "),Object(r.b)("figure",null,Object(r.b)("img",{src:"/personal-website/binary_semaphore_dark.svg",alt:"Binary Semaphore Diagram"}),Object(r.b)("figcaption",null,"Figure 1 - Diagram of a Binary Semaphore")),Object(r.b)("p",null,"The above functions ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"P")))," and\n",Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"V")))," describe this diagram where ",Object(r.b)("inlineCode",{parentName:"p"},"sem_count = {0, 1}")),Object(r.b)("h3",null,"Implementation"),Object(r.b)("p",null,"Lucky for us, OS161 already has an implementation of spinlocks! We will need this to protect our binary semaphore.\nSince our lock is effectively this binary semaphore, it will look ",Object(r.b)("strong",{parentName:"p"},"almost identical")," to the\nimplemenation of the counting semaphore already provided. "),Object(r.b)("p",null,"Our lock must depend on a wait channel, spinlock, and state. If implementing a function that checks who holds the lock\nwe will also need an owner. It's safe to say your lock struct should have these things included in some fashion."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Create"))," :")),Object(r.b)("p",null,"We need to initialize all of our synchronization primitives and allocate space for our lock.\nThere will be no owner of the lock (",Object(r.b)("inlineCode",{parentName:"p"},"NULL"),").\nWe don't need to handle any synchronization in the creation of our lock."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Destroy"))," :")),Object(r.b)("p",null,"Destroying is basically just freeing up the memory that we allocated in creation, cleaning up the spinlock, and\ndestroying the wait channel."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Acquire"))," :")),Object(r.b)("p",null,"We want to acquire our spinlock and check if the resource is available. While the resource is unavailable\nwe sleep on the wait channel till someone wakes us up."),Object(r.b)("p",null,"Once the resource is available we make the resource unavailable and release the spinlock."),Object(r.b)("p",null,"Note: it might seem weird that we release the spinlock right away, but remember it is not the actual lock, it is\nthe ",Object(r.b)("em",{parentName:"p"},"inner")," lock that protects our binary semaphore and any other non-synchronized fields. Our binary semaphores\n",Object(r.b)("inlineCode",{parentName:"p"},"state")," is the real lock."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Release"))," :")),Object(r.b)("p",null,"We acquire the spinlock set our binary semaphores state to 1 indicating the resource is available. After the state\nis set to 1 we want to wake up a thread that is sleeping on the wait channel. We then release the spinlock."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Who holds the lock?"))," :")),Object(r.b)("p",null,"To check who holds the lock we should acquire the spinlock and compare the current thread with a saved owner thread\nof the lock."))}h.isMDXComponent=!0},Ff2n:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n("zLVn");function o(e,t){if(null==e)return{};var n,o,r=Object(a.a)(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}},GzKR:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return d})),n.d(t,"default",(function(){return j}));var a=n("rePB"),o=n("Ff2n"),r=(n("q1tI"),n("7ljp")),i=n("WNUu"),c=n("Ls/5"),s=n("JYIZ"),l=n("YFqc"),b=n.n(l);function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var d={folder:"condition_variables_in_os161",title:"Condition Variables/Monitors in OS161",description:"Getting started and implementing condition variables in OS161",date:"Aug 04, 2020",readTime:2,tags:["condition","synchronization","cond","condition variables","synchronize","cv","os161"]},h={meta:d},m=function(e){var t=e.children;return Object(r.b)(i.a,{meta:d,related:Object(r.b)(c.a,{post:Object(s.a)("locks_in_os161")})},t)};function j(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(m,p(p(p({},h),n),{},{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",null,"What are condition variables?"),Object(r.b)("p",null,"The definition surrounding condition variables is a little questionable. Technically a condition variable is:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"A container of threads that are waiting for a certain condition"),Object(r.b)("p",{parentName:"blockquote"},"\u2014 ",Object(r.b)("cite",null,Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Monitor_(synchronization)",target:"_blank"},"Wikipedia")))),Object(r.b)("p",null,"However, many people refer to them as what they should be referred to as ",Object(r.b)("strong",{parentName:"p"},"Monitors"),". A monitor is:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"a synchronization construct that allows threads to have both mutual exclusion and the ability to wait (block) for a certain condition to become false. Monitors also have a mechanism for signaling other threads that their condition has been met. A monitor consists of a mutex (lock) object and ",Object(r.b)("strong",{parentName:"p"},"condition variables"),"."),Object(r.b)("p",{parentName:"blockquote"},"\u2014 ",Object(r.b)("cite",null,Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Monitor_(synchronization)",target:"_blank"},"Wikipedia")))),Object(r.b)("p",null,"All things considered, it doesn't matter too much as long as there isn't any confusion."),Object(r.b)("h3",null,"Use-case"),Object(r.b)("p",null,"A common use of monitors is a bounded buffer "),Object(r.b)("pre",null,Object(r.b)("code",p({parentName:"pre"},{className:"language-java"}),"void put(int number)\n{\n  lock_acquire(cv_lock);\n  while (itemsFull)\n  {\n    cv_wait(itemsNotFull, cv_lock);\n  }\n\n  items.add(number);\n\n  cv_signal(itemsNotEmpty, cv_lock);\n  lock_release(cv_lock);\n}\n\nvoid take()\n{\n  lock_acquire(cv_lock);\n  while (itemsEmpty)\n  {\n    cv_wait(itemsNotEmpty, cv_lock);\n  }\n\n  int number = items.poll();\n\n  cv_signal(itemsNotFull, cv_lock);\n  lock_release(cv_lock);\n}\n")),Object(r.b)("p",null,"\u2014 Adapted from ",Object(r.b)("cite",null,Object(r.b)("a",{href:"https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/Condition.html",target:"_blank"},"Oracle"))),Object(r.b)("h3",null,"Implementation"),Object(r.b)("p",null,"This post assumes you have already implemented locks in OS161. If you haven't please check out ",Object(r.b)(b.a,{href:"/blog/posts/locks_in_os161",mdxType:"Link"},Object(r.b)("a",{href:"#",style:{color:"#e83e8c"}},"implementing locks in OS161"))),Object(r.b)("p",null,"As above, to implement a monitor we need a lock and the actual condition variable. We already have our lock, but we still need our representation of\na condition variable. To represent a condition variable all we need is a wait channel (wchan). Our condition variable struct only needs to contain\na wait channel and a name. In reality, we don't need a name, but our wait channel does so we should just add it."),Object(r.b)("p",null,"There is one more thing we need that is specific to OS161 to implement our monitor: a spinlock. Since we are using a wait channel for our implementation, the wait channel\nis not inherently thread-safe. Meaning, we have to guard the wait channel ourselves with a spinlock."),Object(r.b)("p",null,"Note: each condition variable has its own wait channel"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Create"))," :")),Object(r.b)("p",null,"We need to create our wait channel, initialize our spinlock, and allocate space for our condition variable.\nWe don't need to handle any synchronization in the creation of our monitor."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Destroy"))," :")),Object(r.b)("p",null,"Destroying is basically just freeing up the memory that we allocated in creation, cleaning up the spinlock, and\ndestroying the wait channel."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Wait"))," :")),Object(r.b)("p",null,"We want to acquire our wait channels spinlock in order to protect it. From the example use-case above, we should already hold\nour monitors lock. Before we sleep on the wait channel we want to release the lock in-order to let someone else use it while we\nare sleeping (not doing anything). Once we've released the lock we sleep on the wait channel. When we are woken up we need to release\nthe wait channel's spin lock and reacquire our monitor's lock."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Signal"))," :")),Object(r.b)("p",null,"Signal is very easy! All we need to do is wake someone up that is sleeping on the wait channel. Don't forget to protect it with its spinlock."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("span",{style:{fontSize:"larger"}},Object(r.b)("inlineCode",{parentName:"strong"},"Broadcast"))," :")),Object(r.b)("p",null,"Broadcast is identical to ",Object(r.b)("inlineCode",{parentName:"p"},"signal(...)")," with the exception of instead of waking up only one thread, we wake up all threads."))}j.isMDXComponent=!0},JI6e:function(e,t,n){"use strict";var a=n("wx14"),o=n("zLVn"),r=n("TSYQ"),i=n.n(r),c=n("q1tI"),s=n.n(c),l=n("vUet"),b=["xl","lg","md","sm","xs"],u=s.a.forwardRef((function(e,t){var n=e.bsPrefix,r=e.className,c=e.as,u=void 0===c?"div":c,p=Object(o.a)(e,["bsPrefix","className","as"]),d=Object(l.a)(n,"col"),h=[],m=[];return b.forEach((function(e){var t,n,a,o=p[e];if(delete p[e],"object"===typeof o&&null!=o){var r=o.span;t=void 0===r||r,n=o.offset,a=o.order}else t=o;var i="xs"!==e?"-"+e:"";t&&h.push(!0===t?""+d+i:""+d+i+"-"+t),null!=a&&m.push("order"+i+"-"+a),null!=n&&m.push("offset"+i+"-"+n)})),h.length||h.push(d),s.a.createElement(u,Object(a.a)({},p,{ref:t,className:i.a.apply(void 0,[r].concat(h,m))}))}));u.displayName="Col",t.a=u},JYIZ:function(e,t,n){"use strict";function a(e){return{link:"/"+e,module:n("oPC5")("./"+e+"/index.mdx")}}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r}));var o,r=(o=n("oPC5")).keys().map((function(e){return{link:e.substr(1).replace(/\/index\.mdx$/,""),module:o(e)}}))},"Ls/5":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var a=n("nKUr"),o=n("MX0m"),r=n.n(o),i=n("YFqc"),c=n.n(i),s=n("Y3Zp"),l=function(e){var t=e.post,n=t.link,o=t.module.meta;return Object(a.jsxs)("article",{className:"jsx-4189104464",children:[Object(a.jsx)(s.a,{meta:o}),Object(a.jsx)(c.a,{href:"/blog/posts"+n,children:Object(a.jsx)("a",{className:"jsx-4189104464",children:"Read more..."})}),Object(a.jsx)(r.a,{id:"4189104464",children:["article.jsx-4189104464{margin-bottom:2.5rem;}"]})]})}},TSYQ:function(e,t,n){var a;!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var a=arguments[t];if(a){var r=typeof a;if("string"===r||"number"===r)e.push(a);else if(Array.isArray(a)&&a.length){var i=o.apply(null,a);i&&e.push(i)}else if("object"===r)for(var c in a)n.call(a,c)&&a[c]&&e.push(c)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(a=function(){return o}.apply(t,[]))||(e.exports=a)}()},WNUu:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n("o0o1"),o=n.n(a);function r(e,t,n,a,o,r,i){try{var c=e[r](i),s=c.value}catch(l){return void n(l)}c.done?t(s):Promise.resolve(s).then(a,o)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function c(e){r(i,a,o,c,s,"next",e)}function s(e){r(i,a,o,c,s,"throw",e)}c(void 0)}))}}var c=n("nKUr"),s=n("MX0m"),l=n.n(s),b=(n("p/Yk"),n("Y3Zp")),u=n("7vrA"),p=n("3Z9Z"),d=n("JI6e");n("Ls/5");function h(e){var t=e.children,n=e.related;return Object(c.jsxs)("div",{className:"jsx-3000341097",children:[Object(c.jsx)(l.a,{id:"3000341097",children:['@import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap|Roboto:wght@400;700&display=swap");','html.jsx-3000341097,body.jsx-3000341097{margin:0;padding:0;font-family:"Roboto",-apple-system,BlinkMacSystemFont,"Segoe UI", Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue", sans-serif;background:#333;color:#fff;font-size:1rem;}','h1.jsx-3000341097,h2.jsx-3000341097,h3.jsx-3000341097,h4.jsx-3000341097,h5.jsx-3000341097,h6.jsx-3000341097{font-weight:700;font-family:"Nunito",-apple-system,BlinkMacSystemFont,"Segoe UI", Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue", sans-serif;}',"a.jsx-3000341097{color:#fff;}",".posts.jsx-3000341097{margin:2rem auto;padding:0 1rem;}",".related-posts.jsx-3000341097{margin:2rem auto;padding:0 1rem;}",".related-posts-title.jsx-3000341097{font-size:2rem;font-weight:700;color:white;margin-bottom:2rem;}","blockquote.jsx-3000341097{border-left:10px solid #ccc;padding-left:10px;}"]}),Object(c.jsx)("main",{className:"jsx-3000341097",children:Object(c.jsx)(u.a,{fluid:!0,children:Object(c.jsxs)(p.a,{children:[Object(c.jsx)(d.a,{xs:2}),Object(c.jsx)(d.a,{xs:7,children:Object(c.jsx)("div",{className:"jsx-3000341097 posts",children:t})}),Object(c.jsx)(d.a,{children:Object(c.jsxs)("div",{className:"jsx-3000341097 related-posts",children:[Object(c.jsx)("h1",{className:"jsx-3000341097 related-posts-title",children:"Related Posts"}),n]})})]})})})]})}var m=n("Jgta"),j=(n("Zs65"),n("q1tI"));function O(e){var t=e.children,n=e.meta,a=e.related;return Object(j.useEffect)(i(o.a.mark((function e(){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:m.a.database().ref("popular_blog_posts/").child(n.folder).child("viewCount").set(m.a.database.ServerValue.increment(1));case 1:case"end":return e.stop()}}),e)})))),Object(c.jsx)("div",{children:Object(c.jsxs)(h,{related:a,children:[Object(c.jsx)(b.a,{meta:n,isBlogPost:!0}),Object(c.jsxs)("article",{className:"jsx-963972619",children:[t,Object(c.jsx)(l.a,{id:"963972619",children:["figure.jsx-963972619{width:50% padding:1rem;margin:auto;}","figcaption.jsx-963972619{font-style:italic;padding:1rem;text-align:right;}","img.jsx-963972619{display:block;margin:auto;}"]})]})]})})}},Y3Zp:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n("nKUr"),o=n("MX0m"),r=n.n(o),i=["January","February","March","April","May","June","July","August","September","October","November","December"],c=function(e){var t=e.meta,n=e.isBlogPost,o=new Date(t.date);return Object(a.jsxs)("div",{className:"jsx-1752250021",children:[Object(a.jsx)("h1",{className:"jsx-1752250021 "+((n?"blog-title":"regular-title")||""),children:t.title}),Object(a.jsxs)("div",{className:"jsx-1752250021 details",children:[n?null:Object(a.jsx)("p",{className:"jsx-1752250021",children:t.description}),Object(a.jsx)("span",{className:"jsx-1752250021",children:i[o.getMonth()]+" "+o.getDate()+", "+o.getFullYear()}),Object(a.jsxs)("span",{role:"img","aria-label":"one coffee",className:"jsx-1752250021",children:["\u2615 ",t.readTime+" min read"]})]}),Object(a.jsx)(r.a,{id:"1752250021",children:[".blog-title.jsx-1752250021{font-size:2.25rem;font-weight:700;color:#b19cd9;}",".regular-title.jsx-1752250021{font-size:1.9rem;font-weight:700;color:#b19cd9;}",".details.jsx-1752250021 span.jsx-1752250021{color:#bdbdbd;margin-right:1rem;}",".details.jsx-1752250021{margin-bottom:1rem;}"]})]})}},Zs65:function(e,t,n){"use strict";n("6Uf2")},oPC5:function(e,t,n){var a={"./condition_variables_in_os161/index.mdx":"GzKR","./locks_in_os161/index.mdx":"CJad","./using_vscode_for_os161/index.mdx":"/fqj"};function o(e){var t=r(e);return n(t)}function r(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}o.keys=function(){return Object.keys(a)},o.resolve=r,e.exports=o,o.id="oPC5"},vUet:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n("wx14");var a=n("q1tI"),o=n.n(a),r=o.a.createContext({});r.Consumer,r.Provider;function i(e,t){var n=Object(a.useContext)(r);return e||n[t]||t}},wx14:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},zLVn:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,"a",(function(){return a}))}}]);